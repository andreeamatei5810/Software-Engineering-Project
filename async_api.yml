asyncapi: 2.0.0
info:
  title: Smart farming
  version: '1.0.0'
  description: AsyncAPI Specification
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  production:
    url: 127.0.0.1:8080
    protocol: mqtt

channels:
  sensorId/crop:
    publish:
        message:
          $ref: '#/components/messages/PublishCrop'
  sensorId/soil:
    publish:
      message:
        $ref: '#/components/messages/PublishSoil'
    subscribe:
        message:
            $ref: '#/components/messages/SubscribeSoil'
  sensorId/weather:
    publish:
      message:
        $ref: '#/components/messages/PublishWeather'
  irrigation:
    publish:
      message:
        $ref: '#/components/messages/PublishIrrigation'

components:
    messages:
      PublishCrop:
        title: Publish crop
        summary: Each time a new crop is added, a message with the contents of the crop is published.
        payload:
          type: object
          properties:
            id:
              type: string
              description: "Crop id"
            sensorId:
              type: string
              description: "The id of the sensor to which the crop is associated"
            timeStamp:
              type: string
              format: date-time
              description: "The date the crop information was taken over"
            name:
              type: string
              description: "Crop name"
            height:
              type: number
              description: "The height of the plants in the crop"
            leafColor:
              type: string
              description: "Crop leaf color"
            leafTemperature:
              type: number
              description: "Crop leaf temperature"
      PublishSoil:
        title: Publish soil
        summary: Each time a new soil is added, a json with the contents of the soil is published.
        payload:
          type: string
          properties:
            id:
              type: string
              description: "Soil id"
            sensorId:
              type: string
              description: "The id of the sensor to which the soil is associated"
            timeStamp:
              type: string
              format: date-time
              description: "The date the soil information was taken over"
            moisture:
                type: integer
                description: "Soil moisture"
            pH:
                type: number
                description: "Soil pH"
            nutrientLevels:
                type: number
                description: "Soil nutrient levels"
            texture:
                type: string
                description: "Soil texture"
            density:
                type: number
                description: "Soil density"
            permeability:
                type: number
                description: "Soil permeability"
      SubscribeSoil:
        title: Subscribe soil
        summary: To start the irrigation system, the subscribe to topic sensorId/soil is used to take information about the soil.
        payload:
          type: string
          properties:
            id:
              type: string
              description: "Soil id"
            sensorId:
              type: string
              description: "The id of the sensor to which the soil is associated"
            timeStamp:
              type: string
              format: date-time
              description: "The date the soil information was taken over"
            moisture:
              type: integer
              description: "Soil moisture"
            pH:
              type: number
              description: "Soil pH"
            nutrientLevels:
              type: number
              description: "Soil nutrient levels"
            texture:
              type: string
              description: "Soil texture"
            density:
              type: number
              description: "Soil density"
            permeability:
              type: number
              description: "Soil permeability"
      PublishWeather:
        title: Publish weather
        summary: Each time a new weather is added, a message with the contents of the weather is published.
        payload:
          type: object
          properties:
            id:
              type: string
              description: "Weather id"
            sensorId:
              type: string
              description: "The id of the sensor to which the weather is associated"
            timeStamp:
              type: string
              format: date-time
              description: "The date the weather information was taken over"
            infoMessage:
              type: string
              description: "Weather description taken by sensors"
            temperature:
              type: integer
              description: "Temperature"
            humidity:
              type: integer
              description: "Humidity level in the air"
            wind:
              type: integer
              description: "Wind power"
      PublishIrrigation:
        title: Publish irrigation
        summary: Each time the irrigation system is turned off / on by the device a message is published with the details of the irrigation system.
        payload:
          type: object
          properties:
            id:
              type: string
              description: "Weather id"
            waterAmount:
              type: integer
              description: "The amount of water needed for the soil to be given by the irrigation system"
            timeStamp:
              type: string
              format: date-time
              description: "Date on which the irrigation system is switched off / on"
            power:
              type: boolean
              description: "The irrigation system is turned off or on"
            soil:
              type: object
              description: "The soil associated with the irrigation system"